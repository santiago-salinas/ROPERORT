<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_log_in_controller_tests_8cs" kind="file" language="C#">
    <compoundname>LogInControllerTests.cs</compoundname>
    <innerclass refid="class_api_tests_1_1_controllers_1_1_login_controller_tests" prot="public">ApiTests::Controllers::LoginControllerTests</innerclass>
    <innernamespace refid="namespace_api_tests">ApiTests</innernamespace>
    <innernamespace refid="namespace_api_tests_1_1_controllers">ApiTests::Controllers</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal">Microsoft.AspNetCore.Mvc;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Moq;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_rest___api_1_1_controllers" kindref="compound">Rest_Api.Controllers</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_rest___api_1_1_d_t_os" kindref="compound">Rest_Api.DTOs</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_services_1_1_interfaces" kindref="compound">Services.Interfaces</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_services_1_1_models" kindref="compound">Services.Models</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_api_tests_1_1_controllers" kindref="compound">ApiTests.Controllers</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>[TestClass]</highlight></codeline>
<codeline lineno="11" refid="class_api_tests_1_1_controllers_1_1_login_controller_tests" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests" kindref="compound">LoginControllerTests</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Mock&lt;IUserService&gt;<sp/>mock;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_rest___api_1_1_controllers_1_1_user_controller" kindref="compound">UserController</ref><sp/>userController;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_rest___api_1_1_controllers_1_1_log_in_controller" kindref="compound">LogInController</ref><sp/>logInController;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1a8c9cde7be9a959321234332bc3db7cc2" kindref="member">email</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;prueba@gmail.com&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1aa9b99fc465639a963211fc7e2f3bb075" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1a585bdb8d36e82fee674295d78c5d01a7" kindref="member">expectedToken</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1ab7396ae94848fc0a3c5eb0758ddc4ce9" kindref="member">TestInitialize</ref>]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1ab7396ae94848fc0a3c5eb0758ddc4ce9" kindref="member">TestInitialize</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1a585bdb8d36e82fee674295d78c5d01a7" kindref="member">expectedToken</ref><sp/>=<sp/>$</highlight><highlight class="stringliteral">&quot;token{email.Reverse()}secure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Mock&lt;IUserService&gt;(MockBehavior.Strict);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userController<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_rest___api_1_1_controllers_1_1_user_controller" kindref="compound">UserController</ref>(mock.Object);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logInController<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_rest___api_1_1_controllers_1_1_log_in_controller" kindref="compound">LogInController</ref>(mock.Object);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>usersGetAll<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;User&gt;();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usersGetAll.Add(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_services_1_1_models_1_1_user" kindref="compound">User</ref>(<ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1a8c9cde7be9a959321234332bc3db7cc2" kindref="member">email</ref>,<sp/></highlight><highlight class="stringliteral">&quot;prueba&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1aa9b99fc465639a963211fc7e2f3bb075" kindref="member">password</ref>)<sp/>{<sp/>Id=3,Token<sp/>=<sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1a585bdb8d36e82fee674295d78c5d01a7" kindref="member">expectedToken</ref><sp/>});</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mock.Setup(s<sp/>=&gt;<sp/>s.GetAll()).Returns(usersGetAll);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1af3220c706973fb83f252a55df48887fa" kindref="member">GetTokenWithValidCredentials</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_rest___api_1_1_d_t_os_1_1_credentials_d_t_o" kindref="compound">CredentialsDTO</ref><sp/>credentials<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_rest___api_1_1_d_t_os_1_1_credentials_d_t_o" kindref="compound">CredentialsDTO</ref>(<ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1a8c9cde7be9a959321234332bc3db7cc2" kindref="member">email</ref>,<sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1aa9b99fc465639a963211fc7e2f3bb075" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OkObjectResult?<sp/>result<sp/>=<sp/>logInController.<ref refid="class_rest___api_1_1_controllers_1_1_log_in_controller_1a3ca87cc1c80abc311554d7a913ac84f4" kindref="member">Create</ref>(credentials)<sp/>as<sp/>OkObjectResult;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsNotNull(result);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1a585bdb8d36e82fee674295d78c5d01a7" kindref="member">expectedToken</ref>,<sp/>result.Value);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod]</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1afdb696b861f303a751ea544e475d7cb9" kindref="member">NotGetTokenWithInvalidCredentials</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_rest___api_1_1_d_t_os_1_1_credentials_d_t_o" kindref="compound">CredentialsDTO</ref><sp/>credentials<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_rest___api_1_1_d_t_os_1_1_credentials_d_t_o" kindref="compound">CredentialsDTO</ref>(<ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1a8c9cde7be9a959321234332bc3db7cc2" kindref="member">email</ref>,<sp/></highlight><highlight class="stringliteral">&quot;not&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1aa9b99fc465639a963211fc7e2f3bb075" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BadRequestObjectResult?<sp/>result<sp/>=<sp/>logInController.<ref refid="class_rest___api_1_1_controllers_1_1_log_in_controller_1a3ca87cc1c80abc311554d7a913ac84f4" kindref="member">Create</ref>(credentials)<sp/>as<sp/>BadRequestObjectResult;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsNotNull(result);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(400,<sp/>result.StatusCode);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod]</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_api_tests_1_1_controllers_1_1_login_controller_tests_1a2d76ee893ce8eb11c8e5401ea049aa88" kindref="member">EmptyCredentials</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_rest___api_1_1_d_t_os_1_1_credentials_d_t_o" kindref="compound">CredentialsDTO</ref><sp/>credentials<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_rest___api_1_1_d_t_os_1_1_credentials_d_t_o" kindref="compound">CredentialsDTO</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BadRequestObjectResult?<sp/>result<sp/>=<sp/>logInController.<ref refid="class_rest___api_1_1_controllers_1_1_log_in_controller_1a3ca87cc1c80abc311554d7a913ac84f4" kindref="member">Create</ref>(credentials)<sp/>as<sp/>BadRequestObjectResult;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsNotNull(result);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(400,<sp/>result.StatusCode);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Diseño 2/266628-255981-271568/Codigo/POS/ApiTests/Controllers/LogInControllerTests.cs"/>
  </compounddef>
</doxygen>
